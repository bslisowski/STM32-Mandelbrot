#ifndef _FONT_H_
#define _FONT_H_

static const uint8_t _digit_zero[72] = {
    0b00000000, 0b00000000, 0b00000000,         
    0b00000000, 0b01111110, 0b00000000,
    0b00000001, 0b11111111, 0b10000000,
    0b00000011, 0b00000000, 0b11000000, 
    0b00000110, 0b00000000, 0b01100000,
    0b00001100, 0b00000000, 0b00110000,
    0b00011000, 0b00000000, 0b00011000,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00011000, 0b00000000, 0b00011000,
    0b00001100, 0b00000000, 0b00110000,
    0b00000110, 0b00000000, 0b01100000,
    0b00000011, 0b00000000, 0b11000000,
    0b00000001, 0b11111111, 0b10000000,
    0b00000000, 0b01111110, 0b00000000,
    0b00000000, 0b00000000, 0b00000000,
};

static const uint8_t _digit_one[72] = {
    0x00, 0x00, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00, 
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00, 
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x18, 0x00,
    0x00, 0x00, 0x00,
};

static const uint8_t _digit_two[72] = {
    0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b11111111, 0b00000000,
    0b00000001, 0b10000001, 0b10000000,
    0b00000011, 0b00000000, 0b11000000,
    0b00000110, 0b00000000, 0b01100000,
    0b00001100, 0b00000000, 0b00110000,
    0b00011000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00001100,
    0b00000000, 0b00000000, 0b00001100,
    0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00110000,
    0b00000000, 0b00000000, 0b11100000,
    0b00000000, 0b00000001, 0b10000000,
    0b00000000, 0b00000111, 0b00000000,
    0b00000000, 0b00001100, 0b00000000,
    0b00000000, 0b00011000, 0b00000000,
    0b00000000, 0b01100000, 0b00000000,
    0b00000000, 0b11000000, 0b00000000,
    0b00000011, 0b10000000, 0b00000000,
    0b00000110, 0b00000000, 0b00000000,
    0b00011100, 0b00000000, 0b00000000,
    0b00110000, 0b00000000, 0b00000000,
    0b00111111, 0b11111111, 0b11111100,
    0b00000000, 0b00000000, 0b00000000
};

static const uint8_t _digit_three[72] = {
    0b00000000, 0b00000000, 0b00000000,
    0b00000011, 0b11111110, 0b00000000,
    0b00000000, 0b00000011, 0b00000000,
    0b00000000, 0b00000001, 0b10000000, 
    0b00000000, 0b00000000, 0b11000000,
    0b00000000, 0b00000000, 0b01100000,
    0b00000000, 0b00000000, 0b00110000,
    0b00000000, 0b00000000, 0b00110000,
    0b00000000, 0b00000000, 0b01100000,
    0b00000000, 0b00000001, 0b10000000,
    0b00000000, 0b00000110, 0b00000000,
    0b00000000, 0b00011000, 0b00000000,
    0b00000000, 0b00000110, 0b00000000,
    0b00000000, 0b00000001, 0b10000000,
    0b00000000, 0b00000000, 0b01100000,
    0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00001100,
    0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b01100000,
    0b00000000, 0b00000001, 0b10000000,
    0b00000111, 0b11111111, 0b00000000,
    0b00000000, 0b00000000, 0b00000000
};

static const uint8_t _digit_four[72] = {
    0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b00000000, 0b11110000,
    0b00000000, 0b00000001, 0b10110000,
    0b00000000, 0b00000011, 0b00110000,
    0b00000000, 0b00000110, 0b00110000,
    0b00000000, 0b00001100, 0b00110000,
    0b00000000, 0b00011000, 0b00110000,
    0b00000000, 0b00110000, 0b00110000,
    0b00000000, 0b01100000, 0b00110000,
    0b00000000, 0b11000000, 0b00110000,
    0b00000001, 0b10000000, 0b00110000,
    0b00000011, 0b00000000, 0b00110000,
    0b00000110, 0b00000000, 0b00110000,
    0b00001100, 0b00000000, 0b00110000,
    0b00011000, 0b00000000, 0b00110000,
    0b00110000, 0b00000000, 0b00110000,
    0b00111111, 0b11111111, 0b11111100,
    0b00000000, 0b00000000, 0b00110000,
    0b00000000, 0b00000000, 0b00110000,
    0b00000000, 0b00000000, 0b00110000,
    0b00000000, 0b00000000, 0b00110000,
    0b00000000, 0b00000000, 0b00110000,
    0b00000000, 0b00000000, 0b00110000,
    0b00000000, 0b00000000, 0b00000000
};

static const uint8_t _digit_five[72] = {
    0b00000000, 0b00000000, 0b00000000,
    0b00111111, 0b11111111, 0b11111100,
    0b00110000, 0b00000000, 0b00000000,
    0b00110000, 0b00000000, 0b00000000, 
    0b00110000, 0b00000000, 0b00000000,
    0b00110000, 0b00000000, 0b00000000,
    0b00110000, 0b00000000, 0b00000000,
    0b00110000, 0b00000000, 0b00000000,
    0b00110000, 0b00000000, 0b00000000,
    0b00110000, 0b11111111, 0b10000000,
    0b00110011, 0b11000000, 0b11100000,
    0b00110110, 0b10000000, 0b01110000,
    0b00111100, 0b00000000, 0b00110000,
    0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00011100,
    0b00000000, 0b00000000, 0b00011100,
    0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00110000,
    0b00110000, 0b00000000, 0b01110000,
    0b00011100, 0b00000000, 0b11100000,
    0b00000110, 0b00000011, 0b11000000,
    0b00000011, 0b11111110, 0b00000000,
    0b00000000, 0b00000000, 0b00000000
};

static const uint8_t _digit_six[72] = {
    0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b01111110, 0b00000000,  
    0b00000011, 0b10000001, 0b11000000,     
    0b00000111, 0b00000000, 0b01100000, 
    0b00001100, 0b00000000, 0b00110000,
    0b00011000, 0b00000000, 0b00000000,
    0b00110000, 0b00000000, 0b00000000,
    0b00110000, 0b00000000, 0b00000000,
    0b00110000, 0b00000000, 0b00000000,
    0b00110000, 0b00000000, 0b00000000,
    0b00110000, 0b01111110, 0b00000000,
    0b00110001, 0b10000001, 0b10000000,
    0b00110111, 0b00000000, 0b11100000,
    0b00111100, 0b00000000, 0b00110000,
    0b00111000, 0b00000000, 0b00011000,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00011000, 0b00000000, 0b00011000,
    0b00001100, 0b00000000, 0b00110000,
    0b00000111, 0b00000000, 0b11100000,
    0b00000001, 0b10000001, 0b10000000,
    0b00000000, 0b11111111, 0b00000000,
    0b00000000, 0b00000000, 0b00000000
};

static const uint8_t _digit_seven[72] = {
    0b00000000, 0b00000000, 0b00000000,
    0b00111111, 0b11111111, 0b11111100,
    0b00000000, 0b00000000, 0b00001100,
    0b00000000, 0b00000000, 0b00001100, 
    0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00110000,
    0b00000000, 0b00000000, 0b01100000,
    0b00000000, 0b00000000, 0b11000000,
    0b00000000, 0b00000001, 0b10000000,
    0b00000000, 0b00000011, 0b00000000,
    0b00000000, 0b00000110, 0b00000000,
    0b00000000, 0b00001100, 0b00000000,
    0b00000000, 0b00011000, 0b00000000,
    0b00000000, 0b00110000, 0b00000000,
    0b00000000, 0b01110000, 0b00000000,
    0b00000000, 0b11100000, 0b00000000,
    0b00000001, 0b10000000, 0b00000000,
    0b00000001, 0b10000000, 0b00000000,
    0b00000011, 0b00000000, 0b00000000,
    0b00000011, 0b00000000, 0b00000000,
    0b00000011, 0b00000000, 0b00000000,
    0b00000011, 0b00000000, 0b00000000,
    0b00000011, 0b00000000, 0b00000000,
    0b00000000, 0b00000000, 0b00000000
};

static const uint8_t _digit_eight[72] = {
    0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b01111110, 0b00000000,
    0b00000011, 0b10000001, 0b11000000,
    0b00000111, 0b00000000, 0b11100000, 
    0b00001100, 0b00000000, 0b00110000,
    0b00011000, 0b00000000, 0b00011000,
    0b00011000, 0b00000000, 0b00011000,
    0b00001100, 0b00000000, 0b00110000,
    0b00000111, 0b00000000, 0b11100000,
    0b00000011, 0b10000001, 0b11000000,
    0b00000000, 0b01111110, 0b00000000,
    0b00000001, 0b10000001, 0b10000000,
    0b00000111, 0b00000000, 0b11100000,
    0b00001100, 0b00000000, 0b00110000,
    0b00011000, 0b00000000, 0b00011000,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00011000, 0b00000000, 0b00011000,
    0b00001100, 0b00000000, 0b00110000,
    0b00000111, 0b00000000, 0b11100000,
    0b00000001, 0b10000001, 0b10000000,
    0b00000000, 0b11111111, 0b00000000,
    0b00000000, 0b00000000, 0b00000000
};

static const uint8_t _digit_nine[72] = {
    0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b01111110, 0b00000000,
    0b00000001, 0b10000001, 0b10000000,
    0b00000111, 0b00000000, 0b11100000,
    0b00001100, 0b00000000, 0b00110000,
    0b00011000, 0b00000000, 0b00011000,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00110000, 0b00000000, 0b00001100,
    0b00011000, 0b00000000, 0b00011100,
    0b00001100, 0b00000000, 0b00111100,
    0b00000111, 0b00000000, 0b11101100,
    0b00000001, 0b10000001, 0b10001100,
    0b00000000, 0b11111111, 0b00001100,
    0b00000000, 0b00000000, 0b00001100,
    0b00000000, 0b00000000, 0b00001100,
    0b00000000, 0b00000000, 0b00001100,
    0b00000000, 0b00000000, 0b00001100,
    0b00000000, 0b00000000, 0b00001100,
    0b00000000, 0b00000000, 0b00011000,
    0b00001100, 0b00000000, 0b00110000,
    0b00000110, 0b00000000, 0b11100000,
    0b00000011, 0b10000001, 0b11000000,      
    0b00000000, 0b01111110, 0b00000000
};

// static const uint8_t _letter_a[72] = {
//     // 00000000 00000000 00000000
//     // 00000000 00000000 00000000
//     // 00000000 00011000 00000000
//     // 00000000 00111100 00000000
//     // 00000000 01100110 00000000
//     // 00000000 01100110 00000000
//     // 00000000 11000011 00000000
//     // 00000000 11000011 00000000
//     // 00000001 10000001 10000000
//     // 00000001 10000001 10000000
//     // 00000011 00000000 11000000
//     // 00000011 00000000 11000000
//     // 00000110 00000000 01100000
//     // 00000110 00000000 01100000
//     // 00001100 00000000 00110000
//     // 00001100 00000000 00110000
//     // 00011000 00000000 00011000
//     // 00011111 11111111 11111000
//     // 00110000 00000000 00001100
//     // 00110000 00000000 00001100
//     // 00110000 00000000 00001100
//     // 00110000 00000000 00001100
//     // 00110000 00000000 00001100
//     // 00000000 00000000 00000000

// }

static const uint8_t *_digit_arr[] = {_digit_zero, _digit_one, _digit_two, _digit_three, _digit_four,
                                        _digit_five, _digit_six, _digit_seven, _digit_eight, _digit_nine};



struct rgb_t {
    uint16_t r, g, b; 
};
typedef struct rgb_t rgb_t;



#define RED     (0b0000000000011111) // 0x07E0u 
#define GREEN   (0b0000011111100000) // 0x001Fu
#define BLUE    (0b1111100000000000) // 0xF800u
#define BLACK   (0x0000)
#define WHITE   (0xFFFF)

// rgb = ((r & 0b11111000) << 8) | ((g & 0b11111100) << 3) | (b >> 3);
#define RGB565(r, g, b) ((uint16_t) ( (((r) & 0b11111000) << 8) | (((g) & 0b11111100) << 3) | ((b) >> 3) ))


static inline float lerp(float a, float b, float f)
{
    return a + f * (b - a);
}

static inline void lerp_rbg(rgb_t *color, rgb_t *c1, rgb_t *c2, float p) {
    color->r = (uint16_t)lerp(c1->r, c2->r, p);
    color->g = (uint16_t)lerp(c1->g, c2->g, p);
    color->b = (uint16_t)lerp(c1->b, c2->b, p);
}


static rgb_t gradient[] = {
    (rgb_t){0, 7, 10},
    (rgb_t){32, 107, 203},
    (rgb_t){237, 255, 255},
    (rgb_t){255, 170, 0},
    (rgb_t){0, 2, 0},
};

// (d + ((fmax - fmin) / 2)) / (fmax - fmin);

// Position = 0.0     Color = (  0,   7, 100)
// Position = 0.16    Color = ( 32, 107, 203)
// Position = 0.42    Color = (237, 255, 255)
// Position = 0.6425  Color = (255, 170,   0)
// Position = 0.8575  Color = (  0,   2,   0)

static inline uint16_t color_pixel(int i, int imax) {
    (void)_digit_arr;
    float p = (float)i / (float)imax;
    rgb_t c;
    rgb_t *c1, *c2;
    float lerp_val = 0.0f;
    if (p < 0.16f) {
        c1 = &gradient[0];
        c2 = &gradient[1];
        lerp_val = (p + (0.16f - 0.0f)/2) / (0.16f - 0.0f);
    }
    else if (p < 0.42f) {
        c1 = &gradient[1];
        c2 = &gradient[2];
        lerp_val = (p + (0.42f - 0.16f)/2) / (0.42f - 0.16f);
    }
    else if (p < 0.6425f) {
        c1 = &gradient[2];
        c2 = &gradient[3];
        lerp_val = (p + (0.6425f- 0.42f)/2) / (0.6425f - 0.42f);
    }
    else if (p < 0.8575f) {
        c1 = &gradient[3];
        c2 = &gradient[4];
        lerp_val = (p + (0.8575f - 0.6425f)/2) / (0.8575f - 0.6425f);
    }
    else {
        c1 = &gradient[4];
        c2 = &gradient[0];
        lerp_val = (p + (1.0f - 0.8575f)/2) / (1.0f - 0.8575f);
    }

    lerp_rbg(&c, c1, c2, lerp_val);

    return RGB565(c.r, c.g, c.b);
}












#endif
